# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Deploy PHP app(Laravel) to Azur VM - laravel-admin

on:
  push:
    branches:
      - main
      - feature/dev
  workflow_dispatch:

jobs:
  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Setup PHP
  #       uses: shivammathur/setup-php@v2
  #       with:
  #         php-version: '8.3'

  #     - name: Check if composer.json exists
  #       id: check_files
  #       uses: andstor/file-existence-action@v1
  #       with:
  #         files: 'composer.json'

  #     - name: Run composer install if composer.json exists
  #       if: steps.check_files.outputs.files_exists == 'true'
  #       run: composer validate --no-check-publish && composer install --prefer-dist --no-progress

  #     - name: Zip artifact for deployment
  #       run: zip release.zip ./* -r

  #     - name: Upload artifact for deployment job
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: php-app
  #         path: release.zip

  deploy:
    runs-on: ubuntu-latest
    environment:
      name: 'production'
      # url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    # permissions:
    #   id-token: write #This is required for requesting the JWT

    steps:
      # Cloner a repository
      - name: Check code
        uses: actions/checkout@v2

      # Installer Docker sur l'agent GitHub
      - name: Set up Docker
        run: unzip release.zip

      # Configuration Docker Login
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Se connecter a la VM via SSH et executer les commandes
      - name: Deploy Laravel app via Docker on Azure VM
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          VM_USER: ${{ secrets.VM_USER }}
          VM_IP: ${{ secrets.VM_IP }}
        run: | # ssh -i ~/.ssh/sosk_key.pem azureuser@20.199.18.244
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key
          ssh -i private_key -o StrictHostKeyChecking=no $VM_USER@VM_IP << 'EOF'
            mkdir -p sosk_workshop
            cd /sosk_workshop
            docker pull ${{ secrets.DOCKER_USERNAME }}/laravel-admin:v1.0.0
            docker build -t laravel-admin:v1.0.0 .
            docker run -d -p 8000:8000 laravel-admin:v1.0.0
          EOF



